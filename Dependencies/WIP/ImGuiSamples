//    std::vector<int> numbers{1, 2, 3};
//    std::vector<int> numbers2{4, 5};
//            // DRAG AND DROP
//            /*{
//                if (ImGui::Begin("Drag-N-Drop 1")) {
//                    if (ImGui::BeginDragDropTarget()) {
//                        if (const ImGuiPayload *payload = ImGui::AcceptDragDropPayload("NUMAR_MISTO")) {
//                            int payload_n = *(const int *) payload->Data;
//                            std::cout << payload_n << "\n";
//                            numbers2.push_back(payload_n);
//                        }
//                        ImGui::EndDragDropTarget();
//                    }
//                    for (auto n : numbers2) {
//                        ImGui::Button(std::to_string(n).c_str());
//                        if (ImGui::BeginDragDropSource(ImGuiDragDropFlags_None)) {
//                            // Set payload to carry the index of our item (could be anything)
//                            ImGui::SetDragDropPayload("NUMAR_MISTO", &n, sizeof(int));
//                            ImGui::EndDragDropSource();
//                        }
//                        if (ImGui::BeginDragDropTarget()) {
//                            if (const ImGuiPayload *payload = ImGui::AcceptDragDropPayload("NUMAR_MISTO")) {
//                                int payload_n = *(const int *) payload->Data;
//                                std::cout << payload_n << "\n";
//                                numbers2.push_back(payload_n);
//                            }
//                            ImGui::EndDragDropTarget();
//                        }
//                    }
//                }
//                ImGui::End();
//
//                if (ImGui::Begin("Drag-N-Drop 2")) {
//                    for (auto n : numbers) {
//                        ImGui::Button(std::to_string(n).c_str());
//                        if (ImGui::BeginDragDropSource(ImGuiDragDropFlags_None)) {
//                            // Set payload to carry the index of our item (could be anything)
//                            ImGui::SetDragDropPayload("NUMAR_MISTO", &n, sizeof(int));
//                            ImGui::EndDragDropSource();
//                        }
//                        if (ImGui::BeginDragDropTarget()) {
//                            if (const ImGuiPayload *payload = ImGui::AcceptDragDropPayload("NUMAR_MISTO")) {
//                                int payload_n = *(const int *) payload->Data;
//                                std::cout << payload_n << "\n";
//                                numbers.push_back(payload_n);
//                            }
//                            ImGui::EndDragDropTarget();
//                        }
//                    }
//                }
//                ImGui::End();
//
//            }*/
//            // DRAG AND DROP END
//
